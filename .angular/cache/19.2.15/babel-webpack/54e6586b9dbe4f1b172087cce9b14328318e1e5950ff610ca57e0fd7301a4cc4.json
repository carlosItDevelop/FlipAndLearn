{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LessonService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = window.location.hostname.includes('replit.dev') ? 'https://' + window.location.hostname.replace('-5000', '-3001') + '/api' : 'http://localhost:3001/api';\n    this.lessonsSubject = new BehaviorSubject([]);\n    this.lessons$ = this.lessonsSubject.asObservable();\n    this.currentFilterSubject = new BehaviorSubject('Todos');\n    this.currentFilter$ = this.currentFilterSubject.asObservable();\n    this.loadLessonsFromAPI();\n  }\n  loadLessonsFromAPI() {\n    this.http.get(`${this.apiUrl}/lessons`).pipe(map(lessons => lessons.map(lesson => ({\n      id: lesson.id,\n      level: lesson.level,\n      englishText: lesson.english_text || lesson.englishText,\n      portugueseText: lesson.portuguese_text || lesson.portugueseText\n    }))), catchError(error => {\n      console.error('Failed to load lessons from API:', error);\n      return of([]);\n    })).subscribe(lessons => {\n      this.lessonsSubject.next(lessons);\n    });\n  }\n  getLessons() {\n    return this.lessons$;\n  }\n  getFilteredLessons(filter) {\n    const params = filter === 'Todos' ? '' : `?level=${filter}`;\n    return this.http.get(`${this.apiUrl}/lessons${params}`).pipe(map(lessons => lessons.map(lesson => ({\n      id: lesson.id,\n      level: lesson.level,\n      englishText: lesson.english_text || lesson.englishText,\n      portugueseText: lesson.portuguese_text || lesson.portugueseText\n    }))), catchError(error => {\n      console.error('Failed to load filtered lessons from API:', error);\n      return of([]);\n    }));\n  }\n  addLesson(lesson) {\n    const newLessonData = {\n      level: lesson.level,\n      englishText: lesson.englishText,\n      portugueseText: lesson.portugueseText\n    };\n    this.http.post(`${this.apiUrl}/lessons`, newLessonData).pipe(catchError(error => {\n      console.error('Failed to add lesson to API:', error);\n      return of(null);\n    })).subscribe(result => {\n      if (result) {\n        // Reload lessons from API to get the updated list\n        this.loadLessonsFromAPI();\n      }\n    });\n  }\n  setFilter(filter) {\n    this.currentFilterSubject.next(filter);\n  }\n  getCurrentFilter() {\n    return this.currentFilterSubject.value;\n  }\n  static {\n    this.ɵfac = function LessonService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LessonService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LessonService,\n      factory: LessonService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","of","catchError","map","LessonService","constructor","http","apiUrl","window","location","hostname","includes","replace","lessonsSubject","lessons$","asObservable","currentFilterSubject","currentFilter$","loadLessonsFromAPI","get","pipe","lessons","lesson","id","level","englishText","english_text","portugueseText","portuguese_text","error","console","subscribe","next","getLessons","getFilteredLessons","filter","params","addLesson","newLessonData","post","result","setFilter","getCurrentFilter","value","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/runner/workspace/src/app/services/lesson.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Lesson, LevelFilter } from '../models/lesson.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n  private apiUrl = window.location.hostname.includes('replit.dev') \n    ? 'https://' + window.location.hostname.replace('-5000', '-3001') + '/api'\n    : 'http://localhost:3001/api';\n  private lessonsSubject = new BehaviorSubject<Lesson[]>([]);\n  public lessons$ = this.lessonsSubject.asObservable();\n\n  private currentFilterSubject = new BehaviorSubject<LevelFilter>('Todos');\n  public currentFilter$ = this.currentFilterSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.loadLessonsFromAPI();\n  }\n\n  private loadLessonsFromAPI(): void {\n    this.http.get<any[]>(`${this.apiUrl}/lessons`)\n      .pipe(\n        map(lessons => lessons.map(lesson => ({\n          id: lesson.id,\n          level: lesson.level,\n          englishText: lesson.english_text || lesson.englishText,\n          portugueseText: lesson.portuguese_text || lesson.portugueseText\n        } as Lesson))),\n        catchError(error => {\n          console.error('Failed to load lessons from API:', error);\n          return of([]);\n        })\n      )\n      .subscribe(lessons => {\n        this.lessonsSubject.next(lessons);\n      });\n  }\n\n  getLessons(): Observable<Lesson[]> {\n    return this.lessons$;\n  }\n\n  getFilteredLessons(filter: LevelFilter): Observable<Lesson[]> {\n    const params = filter === 'Todos' ? '' : `?level=${filter}`;\n    return this.http.get<any[]>(`${this.apiUrl}/lessons${params}`)\n      .pipe(\n        map(lessons => lessons.map(lesson => ({\n          id: lesson.id,\n          level: lesson.level,\n          englishText: lesson.english_text || lesson.englishText,\n          portugueseText: lesson.portuguese_text || lesson.portugueseText\n        } as Lesson))),\n        catchError(error => {\n          console.error('Failed to load filtered lessons from API:', error);\n          return of([]);\n        })\n      );\n  }\n\n  addLesson(lesson: Omit<Lesson, 'id'>): void {\n    const newLessonData = {\n      level: lesson.level,\n      englishText: lesson.englishText,\n      portugueseText: lesson.portugueseText\n    };\n\n    this.http.post<any>(`${this.apiUrl}/lessons`, newLessonData)\n      .pipe(\n        catchError(error => {\n          console.error('Failed to add lesson to API:', error);\n          return of(null);\n        })\n      )\n      .subscribe(result => {\n        if (result) {\n          // Reload lessons from API to get the updated list\n          this.loadLessonsFromAPI();\n        }\n      });\n  }\n\n  setFilter(filter: LevelFilter): void {\n    this.currentFilterSubject.next(filter);\n  }\n\n  getCurrentFilter(): LevelFilter {\n    return this.currentFilterSubject.value;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}