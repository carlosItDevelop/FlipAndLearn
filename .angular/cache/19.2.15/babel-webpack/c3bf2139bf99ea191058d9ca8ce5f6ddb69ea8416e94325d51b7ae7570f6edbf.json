{"ast":null,"code":"import _asyncToGenerator from \"/home/runner/workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class AudioService {\n  constructor() {\n    this.synthesis = window.speechSynthesis;\n    this.isSupported = 'speechSynthesis' in window;\n  }\n  isAudioSupported() {\n    return this.isSupported;\n  }\n  speak(_x) {\n    var _this = this;\n    return _asyncToGenerator(function* (text, lang = 'en-US') {\n      if (!_this.isSupported) {\n        throw new Error('Speech synthesis is not supported in this browser');\n      }\n      // Cancel any ongoing speech\n      _this.synthesis.cancel();\n      return new Promise((resolve, reject) => {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.lang = lang;\n        utterance.rate = 0.8;\n        utterance.pitch = 1;\n        utterance.volume = 1;\n        utterance.onend = () => resolve();\n        utterance.onerror = event => reject(new Error(`Speech synthesis error: ${event.error}`));\n        _this.synthesis.speak(utterance);\n      });\n    }).apply(this, arguments);\n  }\n  stop() {\n    if (this.isSupported) {\n      this.synthesis.cancel();\n    }\n  }\n  static {\n    this.ɵfac = function AudioService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AudioService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AudioService,\n      factory: AudioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AudioService","constructor","synthesis","window","speechSynthesis","isSupported","isAudioSupported","speak","_x","_this","_asyncToGenerator","text","lang","Error","cancel","Promise","resolve","reject","utterance","SpeechSynthesisUtterance","rate","pitch","volume","onend","onerror","event","error","apply","arguments","stop","factory","ɵfac","providedIn"],"sources":["/home/runner/workspace/src/app/services/audio.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n  private synthesis: SpeechSynthesis;\n  private isSupported: boolean;\n\n  constructor() {\n    this.synthesis = window.speechSynthesis;\n    this.isSupported = 'speechSynthesis' in window;\n  }\n\n  isAudioSupported(): boolean {\n    return this.isSupported;\n  }\n\n  async speak(text: string, lang: string = 'en-US'): Promise<void> {\n    if (!this.isSupported) {\n      throw new Error('Speech synthesis is not supported in this browser');\n    }\n\n    // Cancel any ongoing speech\n    this.synthesis.cancel();\n\n    return new Promise((resolve, reject) => {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = lang;\n      utterance.rate = 0.8;\n      utterance.pitch = 1;\n      utterance.volume = 1;\n\n      utterance.onend = () => resolve();\n      utterance.onerror = (event) => reject(new Error(`Speech synthesis error: ${event.error}`));\n\n      this.synthesis.speak(utterance);\n    });\n  }\n\n  stop(): void {\n    if (this.isSupported) {\n      this.synthesis.cancel();\n    }\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,YAAY;EAIvBC,YAAA;IACE,IAAI,CAACC,SAAS,GAAGC,MAAM,CAACC,eAAe;IACvC,IAAI,CAACC,WAAW,GAAG,iBAAiB,IAAIF,MAAM;EAChD;EAEAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,WAAW;EACzB;EAEME,KAAKA,CAAAC,EAAA,EAAqC;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,YAApCC,IAAY,EAAEC,IAAA,GAAe,OAAO;MAC9C,IAAI,CAACH,KAAI,CAACJ,WAAW,EAAE;QACrB,MAAM,IAAIQ,KAAK,CAAC,mDAAmD,CAAC;MACtE;MAEA;MACAJ,KAAI,CAACP,SAAS,CAACY,MAAM,EAAE;MAEvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QACrC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACR,IAAI,CAAC;QACpDO,SAAS,CAACN,IAAI,GAAGA,IAAI;QACrBM,SAAS,CAACE,IAAI,GAAG,GAAG;QACpBF,SAAS,CAACG,KAAK,GAAG,CAAC;QACnBH,SAAS,CAACI,MAAM,GAAG,CAAC;QAEpBJ,SAAS,CAACK,KAAK,GAAG,MAAMP,OAAO,EAAE;QACjCE,SAAS,CAACM,OAAO,GAAIC,KAAK,IAAKR,MAAM,CAAC,IAAIJ,KAAK,CAAC,2BAA2BY,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;QAE1FjB,KAAI,CAACP,SAAS,CAACK,KAAK,CAACW,SAAS,CAAC;MACjC,CAAC,CAAC;IAAC,GAAAS,KAAA,OAAAC,SAAA;EACL;EAEAC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACxB,WAAW,EAAE;MACpB,IAAI,CAACH,SAAS,CAACY,MAAM,EAAE;IACzB;EACF;;;uCAvCWd,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAA8B,OAAA,EAAZ9B,YAAY,CAAA+B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}